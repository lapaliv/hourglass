//import Hourglass from '../dist/hourglass.min';
import Hourglass from '../src';
import {expect} from '@jest/globals';
import {startFromZero} from 'src/utils/startFromZero';

describe('compare', () => {
    describe('diff', () => {
        const data = [
            {start: [693, 10, 22, 2, 28, 40], end: [9443, 12, 22, 2, 28, 40], diff: [8750, 2, 0, 0, 0, 0]},
            {start: [3234, 6, 18, 5, 35, 43], end: [1022, 6, 18, 5, 57, 43], diff: [2211, 11, 29, 23, 38, 0]},
            {start: [2907, 5, 13, 4, 22, 49], end: [2907, 5, 13, 6, 45, 10], diff: [0, 0, 0, 2, 22, 21]},
            {start: [3545, 12, 6, 1, 46, 12], end: [3545, 12, 6, 17, 46, 55], diff: [0, 0, 0, 16, 0, 43]},
            {start: [7065, 9, 15, 13, 46, 1], end: [7065, 9, 12, 11, 46, 38], diff: [0, 0, 3, 1, 59, 23]},
            {start: [331, 5, 1, 0, 9, 5], end: [9410, 11, 25, 0, 6, 4], diff: [9079, 6, 23, 23, 56, 59]},
            {start: [5710, 5, 12, 15, 9, 28], end: [5710, 6, 28, 5, 16, 24], diff: [0, 1, 15, 14, 6, 56]},
            {start: [105, 9, 13, 12, 20, 17], end: [105, 7, 13, 13, 29, 17], diff: [0, 1, 30, 22, 51, 0]},
            {start: [7932, 5, 12, 21, 50, 19], end: [7932, 2, 8, 21, 50, 51], diff: [0, 3, 3, 23, 59, 28]},
            {start: [174, 6, 8, 1, 32, 29], end: [6683, 6, 8, 20, 32, 29], diff: [6509, 0, 0, 19, 0, 0]},
            {start: [3112, 11, 26, 14, 40, 55], end: [9916, 11, 26, 14, 40, 38], diff: [6803, 11, 30, 23, 59, 43]},
            {start: [6124, 12, 4, 17, 22, 32], end: [6124, 12, 4, 8, 22, 32], diff: [0, 0, 0, 9, 0, 0]},
            {start: [3308, 4, 1, 11, 52, 10], end: [3308, 6, 1, 11, 52, 10], diff: [0, 2, 0, 0, 0, 0]},
            {start: [1061, 9, 3, 9, 0, 0], end: [1061, 3, 23, 10, 22, 45], diff: [0, 5, 10, 22, 37, 15]},
            {start: [2977, 7, 4, 5, 54, 42], end: [2977, 7, 17, 2, 54, 52], diff: [0, 0, 12, 21, 0, 10]},
            {start: [6487, 10, 15, 1, 57, 43], end: [1572, 2, 15, 1, 57, 16], diff: [4915, 8, 0, 0, 0, 27]},
            {start: [2421, 3, 25, 14, 40, 28], end: [2421, 3, 23, 14, 25, 28], diff: [0, 0, 2, 0, 15, 0]},
            {start: [4293, 10, 4, 22, 34, 30], end: [3225, 8, 3, 22, 34, 30], diff: [1068, 2, 1, 0, 0, 0]},
            {start: [9543, 7, 5, 22, 19, 44], end: [2289, 2, 6, 22, 19, 44], diff: [7254, 4, 27, 0, 0, 0]},
            {start: [7766, 11, 17, 4, 57, 27], end: [7949, 11, 24, 12, 2, 27], diff: [183, 0, 7, 7, 5, 0]},
            {start: [6564, 5, 7, 3, 14, 47], end: [4067, 11, 10, 3, 7, 47], diff: [2496, 5, 27, 0, 7, 0]},
            {start: [1327, 2, 22, 1, 29, 35], end: [6780, 6, 25, 1, 29, 30], diff: [5453, 4, 2, 23, 59, 55]},
            {start: [1342, 6, 10, 10, 32, 38], end: [1342, 6, 17, 16, 32, 55], diff: [0, 0, 7, 6, 0, 17]},
            {start: [1307, 7, 3, 9, 40, 7], end: [2606, 8, 3, 9, 40, 39], diff: [1299, 1, 0, 0, 0, 32]},
            {start: [7353, 3, 16, 17, 39, 12], end: [7353, 7, 16, 17, 52, 12], diff: [0, 4, 0, 0, 13, 0]},
            {start: [7249, 6, 9, 17, 29, 0], end: [7249, 5, 9, 17, 29, 34], diff: [0, 0, 30, 23, 59, 26]},
            {start: [6193, 12, 5, 9, 51, 57], end: [6193, 12, 15, 9, 39, 57], diff: [0, 0, 9, 23, 48, 0]},
            {start: [9297, 12, 15, 1, 22, 36], end: [9297, 12, 21, 1, 11, 0], diff: [0, 0, 5, 23, 48, 24]},
            {start: [525, 6, 22, 15, 45, 2], end: [525, 11, 22, 5, 24, 51], diff: [0, 4, 30, 13, 39, 49]},
            {start: [4861, 9, 24, 1, 37, 59], end: [5241, 9, 24, 1, 37, 59], diff: [380, 0, 0, 0, 0, 0]},
            {start: [559, 2, 1, 11, 35, 58], end: [6196, 5, 2, 22, 50, 58], diff: [5637, 3, 1, 11, 15, 0]},
            {start: [9689, 7, 26, 18, 4, 39], end: [8088, 10, 9, 20, 58, 6], diff: [1600, 9, 16, 21, 6, 33]},
            {start: [8662, 2, 12, 16, 3, 46], end: [8662, 1, 3, 16, 28, 46], diff: [0, 1, 8, 23, 35, 0]},
            {start: [3658, 4, 2, 0, 30, 49], end: [3658, 9, 24, 8, 40, 41], diff: [0, 5, 22, 8, 9, 52]},
            {start: [2620, 10, 9, 6, 46, 45], end: [2620, 10, 19, 23, 17, 7], diff: [0, 0, 10, 16, 30, 22]},
            {start: [4545, 8, 7, 10, 12, 18], end: [2096, 8, 25, 16, 12, 56], diff: [2448, 11, 12, 17, 59, 22]},
            {start: [5743, 5, 14, 1, 51, 29], end: [5743, 9, 28, 1, 51, 14], diff: [0, 4, 13, 23, 59, 45]},
            {start: [8337, 3, 8, 3, 31, 10], end: [6110, 8, 8, 3, 31, 37], diff: [2226, 6, 30, 23, 59, 33]},
            {start: [9502, 6, 19, 11, 6, 45], end: [4457, 6, 4, 11, 6, 45], diff: [5045, 0, 15, 0, 0, 0]},
            {start: [3287, 6, 26, 10, 51, 44], end: [8882, 7, 26, 8, 51, 48], diff: [5595, 0, 29, 22, 0, 4]},
            {start: [260, 12, 24, 22, 18, 59], end: [260, 12, 16, 12, 18, 45], diff: [0, 0, 8, 10, 0, 14]},
            {start: [7461, 8, 19, 9, 40, 40], end: [7461, 8, 19, 19, 40, 40], diff: [0, 0, 0, 10, 0, 0]},
            {start: [7616, 9, 9, 0, 26, 44], end: [6729, 9, 9, 0, 26, 33], diff: [887, 0, 0, 0, 0, 11]},
            {start: [7017, 5, 9, 8, 58, 41], end: [7017, 8, 9, 8, 58, 41], diff: [0, 3, 0, 0, 0, 0]},
            {start: [5688, 10, 10, 22, 35, 57], end: [5688, 8, 10, 22, 35, 49], diff: [0, 2, 0, 0, 0, 8]},
            {start: [9385, 3, 21, 16, 26, 47], end: [3971, 5, 13, 12, 45, 32], diff: [5413, 10, 8, 3, 41, 15]},
            {start: [1778, 3, 15, 23, 3, 57], end: [5481, 1, 15, 0, 38, 57], diff: [3702, 9, 30, 1, 35, 0]},
            {start: [4494, 8, 12, 0, 6, 40], end: [4494, 8, 12, 17, 6, 52], diff: [0, 0, 0, 17, 0, 12]},
            {start: [2524, 11, 4, 1, 54, 29], end: [2524, 11, 4, 15, 42, 29], diff: [0, 0, 0, 13, 48, 0]},
            {start: [405, 9, 9, 9, 37, 41], end: [405, 9, 9, 4, 20, 41], diff: [0, 0, 0, 5, 17, 0]}
        ];

        for (const datum of data) {
            const start = Hourglass.create(...datum.start);
            const end = Hourglass.create(...datum.end);

            it(`${start.toDateTimeString()} vs ${end.toDateTimeString()}`, () => {
                const diff = start.diff2(end);

                console.log(diff);
                expect(diff.years).toBe(datum.diff[0]);
                expect(diff.months).toBe(datum.diff[1]);
                expect(diff.days).toBe(datum.diff[2]);
                expect(diff.hours).toBe(datum.diff[3]);
                expect(diff.minutes).toBe(datum.diff[4]);
                expect(diff.seconds).toBe(datum.diff[5]);
            });
        }
    });
});
